"""Subclass of _mainFrame, which is generated by wxFormBuilder."""

import wx
import _window
import wx.html2
import wx.html

# Implementing _mainFrame
class _interface( _window._mainFrame ):
    def __init__( self, parent, lessonsManager ):
        _window._mainFrame.__init__( self, None )
        self.parent = parent
        self.lessonsManager = lessonsManager

        i = 1
        while(self.lessonsManager.Exists(i)):
            self.lessonsManager.ChangeLesson(i)
            lesson = wx.MenuItem( self.m_menu1, wx.ID_ANY, self.lessonsManager.GetName(), wx.EmptyString, wx.ITEM_NORMAL )
            self.LessonMenu.AppendItem( lesson )
            self.Bind( wx.EVT_MENU, self.OnLessonClicked, id = lesson.GetId() )
            i += 1

        self.lessonsManager.ChangeLesson(1)
        self.CodeBox.SetValue(self.lessonsManager.LoadCode())
        self.LessonName.SetLabelText(self.lessonsManager.GetName())
        self.InstructionsWindow.SetPage(self.lessonsManager.GetInstructions(), "")
        self.StatusBar.SetStatusText("Ready")

    # Handlers for _mainFrame events.
    def OnPreviousButtonClicked( self, event ):
        self.lessonsManager.StoreCode(self.CodeBox.GetValue())
        self.lessonsManager.PreviousLesson()
        self.CodeBox.SetValue(self.lessonsManager.LoadCode())
        self.LessonName.SetLabelText(self.lessonsManager.GetName())
        self.InstructionsWindow.SetPage(self.lessonsManager.GetInstructions(), "")
        self.StatusBar.SetStatusText("Ready")


    def OnNextButtonClicked( self, event ):
        self.lessonsManager.StoreCode(self.CodeBox.GetValue())
        self.lessonsManager.NextLesson()
        self.CodeBox.SetValue(self.lessonsManager.LoadCode())
        self.LessonName.SetLabelText(self.lessonsManager.GetName())
        self.InstructionsWindow.SetPage(self.lessonsManager.GetInstructions(), "")
        self.StatusBar.SetStatusText("Ready")

    def OnOpenClicked( self, event):
        openFileDialog = wx.FileDialog(self, "Open blkgp file", "", "", "blkgp files (*.blkgp)|*.blkgp", wx.FD_OPEN | wx.FD_FILE_MUST_EXIST)

        if openFileDialog.ShowModal() == wx.ID_CANCEL:
            return     # the user changed idea...

        # proceed loading the file chosen by the user
        # this can be done with e.g. wxPython input streams:
        input_stream = wx.FileInputStream(openFileDialog.GetPath())

        if not input_stream.IsOk():

            wx.LogError("Cannot open file '%s'."%openFileDialog.GetPath())
            self.StatusBar.SetStatusText("Failed To Open File...")
            return


    def OnSaveClicked( self, event ):
        saveFileDialog = wx.FileDialog(self, "Save blkgp file", "", "", "blkgp files (*.blkgp)|*.blkgp", wx.FD_SAVE | wx.FD_OVERWRITE_PROMPT)

        if saveFileDialog.ShowModal() == wx.ID_CANCEL:
            return     # the user changed idea...

        # save the current contents in the file
        # this can be done with e.g. wxPython output streams:
        output_stream = wx.FileOutputStream(saveFileDialog.GetPath())

        if not output_stream.IsOk():
            wx.LogError("Cannot save current contents in file '%s'."%saveFileDialog.GetPath())
            self.StatusBar.SetStatusText("Save Failed... Please Try Again With A Differnt File Name")
            return

        else: self.StatusBar.SetStatusText("Saved")


    def OnStartShowClicked( self, event ):
        # TODO: Implement OnStartShowClicked
        pass

    def OnExitClicked( self, event ):
        self.Close()

    def OnRunProgramClicked( self, event ):
        self.parent.load(self.CodeBox.GetText())

    def OnLessonClicked( self, event ):
        print event

